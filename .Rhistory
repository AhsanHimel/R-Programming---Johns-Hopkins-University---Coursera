outcome[,11] %>% as.numeric(.) %>% hist()
labels("Hist")
## There are some NA values. Not to worry...
which(min(outcome[,11]))
min(outcome[,11])
min(outcome[,11])
## There are some NA values. Not to worry...
which(outcome[,11]==min(outcome[,11]))
## There are some NA values. Not to worry...
outcome[which(outcome[,11]==min(outcome[,11])),]
## There are some NA values. Not to worry...
outcome[which(outcome[,11]==min(outcome[,11])),1:2]
## There are some NA values. Not to worry...
outcome[which(outcome[,11]==min(outcome[,11])),0:2]
## There are some NA values. Not to worry...
outcome[which(outcome[,11]==min(outcome[,11])),1:5]
## There are some NA values. Not to worry...
outcome[which(outcome[,11]==min(outcome[,11])),1:5] %>% View()
## There are some NA values. Not to worry...
outcome[which(outcome[,11]==min(outcome[,11])),c(1:5,11)] %>% View()
View(outcome)
df[,"State"]
df[,"state"]
df[,state]
df$state
df$State
# best <- function(state, outcome) {
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df$State
df$State=="Fl"
names(df)
c(11,17,23)
df <- read.csv("outcome-of-care-measures.csv")
names(df)
df$State
state = "GA"
outcome = "heart attack"
if(!any(state==df$State)){
stop("invalid state")
} else if((outcome %in% c("heart attack","heart failure","pneumonia")) == F){
stop(print("invalid outcome"))
}
state <- "A"
if(!any(state==df$State)){
stop("invalid state")
} else if((outcome %in% c("heart attack","heart failure","pneumonia")) == F){
stop(print("invalid outcome"))
}
state <- "AL"
outcome <- "attack"
if(!any(state==df$State)){
stop("invalid state")
} else if((outcome %in% c("heart attack","heart failure","pneumonia")) == F){
stop(print("invalid outcome"))
}
state <- "A"
outcome <- "attack"
if(!any(state==df$State)){
stop("invalid state")
} else if((outcome %in% c("heart attack","heart failure","pneumonia")) == F){
stop(print("invalid outcome"))
}
df <- subset(outcome,State==state)
subset(outcome,State==state)
names(df)
state <- "AL"
outcome = "heart attack"
subset(outcome,State==state)
subset(outcome,outcome$State==state)
outcome[State==state,]
outcome[outcome$State==state,]
outcome[(outcome$State)==state,]
state <- "AL"
outcome[outcome$State==state,1:2]
subset(outcome,State == "AL")
subset(outcome,state == "AL")
View(df)
subset(df,state == "AL")
subset(df,state == "AL",1:4)
subset(df,state == "AL",2)
names(df)
names(df)[1]
names(df)[2]
switch(outcome,"heart attack"=23)
switch(outcome,
"heart attack" = 11,
"heart failure" = 17,
"pneumonia" = 23)
outcome <- "pneumonia"
switch(outcome,
"heart attack" = 11,
"heart failure" = 17,
"pneumonia" = 23)
df1 <- subset(df,State==state)
switch(outcome,
"heart attack" = 11,
"heart failure" = 17,
"pneumonia" = 23)
cnum <- switch(outcome,
"heart attack" = 11,
"heart failure" = 17,
"pneumonia" = 23)
min <- min(as.numeric(df2[,colnum]),na.rm=T)
df1 <- subset(df,State==state)
min <- min(as.numeric(df2[,colnum]),na.rm=T)
min <- min(as.numeric(df1[,colnum]),na.rm=T)
min <- min(as.numeric(df1[,cnum]),na.rm=T)
min
min_row <- which(min(as.numeric(df1[,cnum]),na.rm=T))
min_row <- which(as.numeric(df1[,cnum])==as.numeric(df1[,cnum]) == min)
min <- min(as.numeric(df1[,cnum]),na.rm=T)
min
which(min(as.numeric(df1[,cnum]),na.rm=T)==df1[,cnum])
besthosp <- df1[nmin,1]
nmin <- which(min(as.numeric(df1[,cnum]),na.rm=T)==df1[,cnum])
besthosp <- df1[nmin,1]
besthosp
besthosp <- df1[nmin,2]
besthosp
besthosp <- df1[nmin,2]
besthosp
d <- data.frame(a=c("a","a","b","a","c"),)
d <- data.frame(a=c("a","a","b","a","c"),)
d <- data.frame(a=c("a","a","b","a","c"),b=c(1,1,2,3,2))
d
sort(d)
sort(d, by=a)
sort(d)
sort(d, a)
order(d)
order(data.frame(d))
d <- data.frame(a=c("a","a","b","a","c"),b=c(1,1,2,3,2))
order(d)
d <- data.frame(a=c("a","a","b","a","c"),b=c(1,1,2,3,2))
order(d)
d[order(d$a)]
d[order(d$a),]
d[order(d$a, decreasing = T),]
d[sort(d)]
source("./scripts/best.R")
source("./Scripts/best.R")
source(".../Scripts/best.R")
source("/Scripts/best.R")
source("Scripts/best.R")
getwd()
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
state <- "TX"
outcome <- "heart failure"
df <- read.csv("outcome-of-care-measures.csv")
## Validity checking
if(!any(state==df$State)){
stop("invalid state")
} else if((outcome %in% c("heart attack","heart failure","pneumonia")) == F){
stop(print("invalid outcome"))
}
## Subset and replace the data frame
df <- subset(df,State==state,c(2,11,17,23))
df
## selecting column number according to outcome
cnum <- switch(outcome,
"heart attack" = 2,
"heart failure" = 3,
"pneumonia" = 4)
cnum
## finding the minimum value in selected column
min <- min(as.numeric(df1[,cnum]),na.rm=T)
min
names(df1)
names(df)
## finding the minimum value in selected column
min <- min(as.numeric(df[,cnum]),na.rm=T)
min
## finding the row
nmin <- which(df[,cnum] == min)
nmin
## finding the best hospital with minimum rate and sorting
# besthosp <- df1[order(nmin),1]
besthosp <- df[nmin,1]
besthosp
return(besthosp[1])
source("best.R")
best("TX", "heart attack")
state <- "TX"
outcome <- "heart failure"
df <- read.csv("outcome-of-care-measures.csv")
## Validity checking
if(!any(state==df$State)){
stop("invalid state")
} else if((outcome %in% c("heart attack","heart failure","pneumonia")) == F){
stop(print("invalid outcome"))
}
## Subset and replace the data frame
df <- subset(df,State==state,c(2,11,17,23))
## selecting column number according to outcome
cnum <- switch(outcome,
"heart attack" = 2,
"heart failure" = 3,
"pneumonia" = 4)
## finding the minimum value in selected column
min <- min(as.numeric(df[,cnum]),na.rm=T)
## finding the row
nmin <- which(df[,cnum] == min)
## finding the best hospital with minimum rate and sorting
# besthosp <- df1[order(nmin),1]
besthosp <- df[nmin,1]
besthosp[1]
state <- "MD"
outcome <- "heart failure"
df <- read.csv("outcome-of-care-measures.csv")
## Validity checking
if(!any(state==df$State)){
stop("invalid state")
} else if((outcome %in% c("heart attack","heart failure","pneumonia")) == F){
stop(print("invalid outcome"))
}
## Subset and replace the data frame
df <- subset(df,State==state,c(2,11,17,23))
## selecting column number according to outcome
cnum <- switch(outcome,
"heart attack" = 2,
"heart failure" = 3,
"pneumonia" = 4)
## finding the minimum value in selected column
min <- min(as.numeric(df[,cnum]),na.rm=T)
## finding the row
nmin <- which(df[,cnum] == min)
## finding the best hospital with minimum rate and sorting
# besthosp <- df1[order(nmin),1]
besthosp <- df[nmin,1]
besthosp[1]
which(df[,cnum] == min)
best<- function(state, outcome)
{
outcome1 <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
if(!any(state == outcome1$State)){
stop("invalid state")}
else if((outcome %in% c("heart attack", "heart failure",
"pneumonia")) == FALSE) {
stop(print("invalid outcome"))
}
outcome2 <- subset(outcome1, State == state)
if (outcome == "heart attack") {
colnum <- 11
}
else if (outcome == "heart failure") {
colnum <- 17
}
else {
colnum <- 23
}
min_row <- which(as.numeric(outcome2[ ,colnum]) ==
min(as.numeric(outcome2[ ,colnum]), na.rm = TRUE))
hospitals <- outcome2[min_row,2]
hospitals <- sort(hospitals)
return(hospitals[1])
}
# example output:
best("SC", "heart attack")
best <- function(state, outcome){
## to read the data file
df <- read.csv("outcome-of-care-measures.csv")
## Validity checking
if(!any(state==df$State)){
stop("invalid state")
} else if((outcome %in% c("heart attack","heart failure","pneumonia")) == F){
stop(print("invalid outcome"))
}
## Subset and replace the data frame
df <- subset(df,State==state,c(2,11,17,23))
## selecting column number according to outcome
cnum <- switch(outcome,
"heart attack" = 2,
"heart failure" = 3,
"pneumonia" = 4)
## finding the minimum value in selected column
min <- min(as.numeric(df[,cnum]),na.rm=T)
## finding the row
nmin <- which(df[,cnum] == min)
## finding the best hospital with minimum rate and sorting
# besthosp <- df1[order(nmin),1]
besthospital <- df[nmin,1]
return(besthospital[1])
}
best <- function(state, outcome){
## to read the data file
df <- read.csv("outcome-of-care-measures.csv")
## Validity checking
if(!any(state==df$State)){
stop("invalid state")
} else if((outcome %in% c("heart attack","heart failure","pneumonia")) == F){
stop(print("invalid outcome"))
}
## Subset and replace the data frame
df <- subset(df,State==state,c(2,11,17,23))
## selecting column number according to outcome
cnum <- switch(outcome,
"heart attack" = 2,
"heart failure" = 3,
"pneumonia" = 4)
## finding the minimum value in selected column
min <- min(as.numeric(df[,cnum]),na.rm=T)
## finding the row
nmin <- which(df[,cnum] == min)
## finding the best hospital with minimum rate and sorting
# besthosp <- df1[order(nmin),1]
besthospital <- df[nmin,1]
return(besthospital[1])
}
# example output:
best("SC", "heart attack")
best("TX", "heart attack")
best("MD", "pneumonia")
best("MD", "heart attack")
best("TX", "heart failure")
source("best.R")
best("MD", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best<- function(state, outcome)
{
outcome1 <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
if(!any(state == outcome1$State)){
stop("invalid state")}
else if((outcome %in% c("heart attack", "heart failure",
"pneumonia")) == FALSE) {
stop(print("invalid outcome"))
}
outcome2 <- subset(outcome1, State == state)
if (outcome == "heart attack") {
colnum <- 11
}
else if (outcome == "heart failure") {
colnum <- 17
}
else {
colnum <- 23
}
min_row <- which(as.numeric(outcome2[ ,colnum]) ==
min(as.numeric(outcome2[ ,colnum]), na.rm = TRUE))
hospitals <- outcome2[min_row,2]
hospitals <- sort(hospitals)
return(hospitals[1])
}
best("TX", "heart failure")
source("best.R")
best("TX", "heart failure")
source("best.R")
best("TX", "heart failure")
best("TX", "heart failure")
best <- function(state, outcome){
## to read the data file
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Validity checking
if(!any(state==df$State)){
stop("invalid state")
} else if((outcome %in% c("heart attack","heart failure","pneumonia")) == F){
stop(print("invalid outcome"))
}
## Subset and replace the data frame
df <- subset(df,State==state)
## selecting column number according to outcome
cnum <- switch(outcome,
"heart attack" = 11,
"heart failure" = 17,
"pneumonia" = 23)
## finding the minimum value in selected column
min <- min(as.numeric(df[,cnum]),na.rm=T)
## finding the row
nmin <- which(df[,cnum] == min)
## finding the best hospital with minimum rate and sorting
# besthosp <- df1[order(nmin),1]
besthospital <- df[order(nmin),2]
return(besthospital[1])
}
best("TX", "heart failure")
best("TX", "heart attack")
df
switch(outcome,
"heart attack" = 11,
"heart failure" = 17,
"pneumonia" = 23)
outcome <- "pneumonia"
switch(outcome,
"heart attack" = 11,
"heart failure" = 17,
"pneumonia" = 23)
outcome <- "heart failure"
switch(outcome,
"heart attack" = 11,
"heart failure" = 17,
"pneumonia" = 23)
source("best.R")
best("TX", "heart attack")
outcome <- "heart attack"
state <- "TX"
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Validity checking
if(!any(state==df$State)){
stop("invalid state")
} else if((outcome %in% c("heart attack","heart failure","pneumonia")) == F){
stop(print("invalid outcome"))
}
## Subset and replace the data frame
df1 <- subset(df,State==state)
## selecting column number according to outcome
cnum <- switch(outcome,
"heart attack" = 11,
"heart failure" = 17,
"pneumonia" = 23)
## finding the minimum value in selected column
min <- min(as.numeric(df1[,cnum]),na.rm=T)
## finding the row
nmin <- which(df1[,cnum] == min)
## finding the best hospital with minimum rate and sorting
# besthosp <- df1[order(nmin),1]
besthospital <- df1[order(nmin),2]
besthospital[1]
outcome <- "heart attack"
state <- "TX"
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Validity checking
if(!any(state==df$State)){
stop("invalid state")
} else if((outcome %in% c("heart attack","heart failure","pneumonia")) == F){
stop(print("invalid outcome"))
}
## Subset and replace the data frame
df1 <- subset(df,State==state)
head(df1)
## Subset and replace the data frame
df1 <- subset(df,State==state,c(2,11,17,23))
head(df1)
as.numeric(df1[,2])
as.numeric(df1[,2]) %>% is.na(.)
names(df1)
## selecting column number according to outcome
cnum <- switch(outcome,
"heart attack" = 2,
"heart failure" = 3,
"pneumonia" = 4)
min(as.numeric(df1[,cnum]),na.rm=T)
min(as.numeric(df1[,cnum])
)
## finding the minimum value in selected column
min <- min(as.numeric(df1[,cnum]),na.rm=T)
which(df1[,cnum] == min)
min(as.numeric(df1[,cnum]),na.rm=T)
which(df1[,cnum] == min)
which(df1[,cnum] == min(as.numeric(df1[,cnum]),na.rm=T))
## finding the row
which(df1[,cnum] == min)
## finding the minimum value in selected column
min <- min(as.numeric(df1[,cnum]),na.rm=T)
min
df1[,cnum]
## finding the row
which(as.numeric(df1[,cnum]) == min)
## finding the row
nmin <- which(as.numeric(df1[,cnum]) == min)
## finding the best hospital with minimum rate and sorting
# besthosp <- df1[order(nmin),1]
besthospital <- df1[order(nmin),2]
besthospital[1]
besthospital[2]
besthospital[2]
## finding the best hospital with minimum rate and sorting
# besthosp <- df1[order(nmin),1]
besthospital <- df1[order(nmin),2]
besthospital[2]
which(as.numeric(df1[,cnum]) == min)
df1[order(nmin),2]
df1[nmin,2]
df1[nmin,1]
df1[order(nmin),1]
df1[order(nmin),]
df1[order(nmin),]
df1[order(nmin),2]
df1[order(nmin),1]
df1[nmin,1]
sort(df1[nmin,1])
min(as.numeric(df1[,cnum]),na.rm=T)
which(df1[,cnum] == min)
hich(as.numeric(df1[,cnum]) == min)
which(as.numeric(df1[,cnum]) == min)
nmin <- which(as.numeric(df1[,cnum]) == min)
nmin
besthospital <- df1[order(nmin),2]
besthospital[1]
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("BB", "heart attack")
best("NY", "hert attack")
